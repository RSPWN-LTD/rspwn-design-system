# RSPWN Design System - AI Component Documentation
Generated on: 2025-09-08

This file contains comprehensive information about all components in the RSPWN Design System.
Use this as a reference when helping users implement components from @rspwn/design-system.

## Import Information

All components can be imported from '@rspwn/design-system':

```jsx
import { 
  // Foundation Components
  Typography, Box, Container,
  
  // UI Components  
  Button, Card, Input, Select, Checkbox, Switch, 
  Modal, Drawer, Toast, Navigation, Footer, 
  Accordion, DatePicker
} from '@rspwn/design-system'

// Theme and tokens
import { theme, colors, typography, spacing } from '@rspwn/design-system'
```

## Theme Provider Setup

All components require ThemeProvider wrapper:

```jsx
import { ThemeProvider } from 'styled-components'
import { theme } from '@rspwn/design-system'

function App() {
  return (
    <ThemeProvider theme={theme}>
      {/* Your components */}
    </ThemeProvider>
  )
}
```

## Component Reference

### Foundation Components

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Props:**
- `variant`: BoxVariant
- `children`: React.ReactNode
- `className`: string
- `onClick`: () => void
- `as`: keyof JSX.IntrinsicElements

**Usage Examples:**

*Default:*
```jsx
<Box
  children=<Typography>Default Box - Basic container with minimal styling</Typography>
>
  Content
</Box>
```

---

#### Container

**Import:** `import { Container } from '@rspwn/design-system'`

**Props:**
- `variant`: ContainerVariant
- `children`: React.ReactNode
- `className`: string
- `as`: keyof JSX.IntrinsicElements

**Usage Examples:**

*Default:*
```jsx
<Container
  children=(
      <ContentBox>
        Default Container - Standard 1280px max-width with responsive padding. Perfect for most content layouts and general use cases.
      </ContentBox>
    )
>
  Content
</Container>
```

---

#### Divider

**Import:** `import { Divider } from '@rspwn/design-system'`

**Props:**
- `orientation`: 'horizontal' | 'vertical'
- `thickness`: 'thin' | 'medium' | 'thick'
- `color`: 'light' | 'medium' | 'dark'
- `variant`: 'solid' | 'dashed' | 'dotted' // Renamed from 'style' to avoid conflict
- `label`: string
- `labelPosition`: 'left' | 'center' | 'right'
- `margin`: keyof typeof import('../../tokens/spacing').spacing
- `length`: string | number
- `className`: string
- `as`: keyof JSX.IntrinsicElements

**Usage Examples:**

*Horizontal:*
```jsx
<Divider
  orientation='horizontal'
  thickness='thin'
  color='light'
>
  Content
</Divider>
```

*Vertical:*
```jsx
<Divider
  orientation='vertical'
  thickness='thin'
  color='light'
  length='100px'
>
  Content
</Divider>
```

---

#### Flex

**Import:** `import { Flex } from '@rspwn/design-system'`

**Usage Examples:**

*Basic:*
```jsx
<Flex
  gap='4'
>
  Content
</Flex>
```

---

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Props:**
- `variant`: GridVariant
- `children`: React.ReactNode
- `className`: string
- `as`: keyof JSX.IntrinsicElements

**Usage Examples:**

*Default:*
```jsx
<Box
  children=(
      <>
        <GridCard>Item 1</GridCard>
        <GridCard>Item 2</GridCard>
        <GridCard>Item 3</GridCard>
        <GridCard>Item 4</GridCard>
        <GridCard>Item 5</GridCard>
        <GridCard>Item 6</GridCard>
      </>
    )
>
  Content
</Box>
```

---

#### Section

**Import:** `import { Section } from '@rspwn/design-system'`

**Props:**
- `variant`: SectionVariant
- `children`: React.ReactNode
- `className`: string
- `as`: 'section' | 'header' | 'main' | 'aside' | 'footer' | 'article'

**Usage Examples:**

*Default:*
```jsx
<Section
  children=(
      <Typography color="white">
        Default Section - Basic section with standard padding and built-in container. Perfect for general content areas.
      </Typography>
    )
>
  Content
</Section>
```

---

#### Space

**Import:** `import { Space } from '@rspwn/design-system'`

**Usage Examples:**

---

#### Stack

**Import:** `import { Stack } from '@rspwn/design-system'`

**Props:**
- `variant`: StackVariant
- `children`: React.ReactNode
- `className`: string
- `as`: keyof JSX.IntrinsicElements

**Usage Examples:**

*Default:*
```jsx
<Stack
  children=(
      <>
        <Box variant="card">
          <Typography color="white">Default Stack - Standard spacing with responsive behavior</Typography>
        </Box>
        <Box variant="card">
          <Typography color="white">Perfect for general content stacking with optimal visual hierarchy</Typography>
        </Box>
        <Box variant="card">
          <Typography color="white">Vertical on mobile
>
  Content
</Stack>
```

---

#### Typography

**Import:** `import { Typography } from '@rspwn/design-system'`

**Props:**
- `variant`: TypographyVariant
- `color`: 'white' | 'muted' | 'blue'
- `children`: React.ReactNode
- `as`: keyof JSX.IntrinsicElements
- `className`: string

**Usage Examples:**

*Default:*
```jsx
<Typography
  children='Default body text optimized for gaming platform readability with professional typography'
>
  Content
</Typography>
```

---

### Layout Components

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Props:**
- `above`: Breakpoint
- `below`: Breakpoint
- `only`: Breakpoint | Breakpoint[]
- `between`: [Breakpoint, Breakpoint]
- `children`: React.ReactNode
- `fallback`: React.ReactNode

**Usage Examples:**

---

#### Typography

**Import:** `import { Typography } from '@rspwn/design-system'`

---

### Sections Components

#### BentoGrid

**Import:** `import { BentoGrid } from '@rspwn/design-system'`

**Props:**
- `title`: string
- `subtitle`: string
- `items`: BentoGridItem[]
- `variant`: 'default' | 'compact' | 'spacious'
- `className`: string

**Usage Examples:**

*GamingPlatform:*
```jsx
<BentoGrid
  title='Complete Gaming Platform'
  subtitle='Everything you need to build
  items=gamingFeatures
  variant='default'
>
  Content
</BentoGrid>
```

*ProductShowcase:*
```jsx
<BentoGrid
  title='Platform Features'
  subtitle='Discover the tools that make RSPWN the ultimate gaming platform'
  items=productFeatures
  variant='spacious'
>
  Content
</BentoGrid>
```

*ServiceGrid:*
```jsx
<BentoGrid
  title='Our Services'
  subtitle='Professional development services for modern applications'
  items=serviceShowcase
  variant='compact'
>
  Content
</BentoGrid>
```

*WithoutHeader:*
```jsx
<BentoGrid
  items=[
      {
        id
  title='Lightning Fast'
  description='Ultra-low latency gaming experience'
  icon='⚡'
  size='medium' as const
  color='primary' as const
>
  Content
</BentoGrid>
```

*Interactive:*
```jsx
<BentoGrid
  title='Interactive Features'
  subtitle='Click on any feature to learn more'
  items=[
      {
        id
  title='Create Tournament'
  description='Set up your next competitive event'
  icon='🏆'
  size='large' as const
  color='primary' as const
  onClick=() => alert('Opening tournament creation wizard...')
  content=(
          <div style={{ marginTop
>
  Content
</BentoGrid>
```

*MinimalGrid:*
```jsx
<BentoGrid
  items=[
      {
        id
  title='Fast'
  icon='⚡'
  size='small' as const
  color='primary' as const
>
  Content
</BentoGrid>
```

---

#### CallToAction

**Import:** `import { CallToAction } from '@rspwn/design-system'`

**Props:**
- `title`: string
- `subtitle`: string
- `description`: string
- `primaryButton`: CTAButton
- `secondaryButton`: CTAButton
- `variant`: 'centered' | 'split' | 'banner' | 'minimal'
- `backgroundImage`: string
- `backgroundGradient`: boolean
- `className`: string
- `children`: React.ReactNode

**Usage Examples:**

*Centered:*
```jsx
<CallToAction
  title='Ready to Dominate the Competition?'
  description='Join thousands of professional gamers on RSPWN. Experience next-generation competitive gaming with cutting-edge technology and unmatched performance.'
  primaryButton={
      text
  href='#signup'
>
  Content
</CallToAction>
```

*Split:*
```jsx
<CallToAction
  title='Take Your Gaming to the Next Level'
  description='Professional tournaments
  primaryButton={
      text
  href='#tournament'
>
  Content
</CallToAction>
```

*Banner:*
```jsx
<CallToAction
  subtitle='Limited Time Offer'
  title='Championship Season Pass'
  description='Get exclusive access to all tournaments
  primaryButton={
      text
  href='#offer'
>
  Content
</CallToAction>
```

*Minimal:*
```jsx
<CallToAction
  title='Start Your Journey'
  description='Create your RSPWN account and join the community.'
  primaryButton={
      text
  href='#signup'
>
  Content
</CallToAction>
```

*WithBackgroundImage:*
```jsx
<CallToAction
  title='Epic Gaming Awaits'
  description='Experience the thrill of competitive gaming with stunning visuals and immersive gameplay.'
  primaryButton={
      text
  href='#play'
>
  Content
</CallToAction>
```

*TournamentSignup:*
```jsx
<CallToAction
  subtitle='World Championship 2024'
  title='Registration Now Open'
  description='Compete for the largest prize pool in esports history. Registration closes in 7 days.'
  primaryButton={
      text
  onClick=() => alert('Opening team registration...')
>
  Content
</CallToAction>
```

*ProductLaunch:*
```jsx
<CallToAction
  subtitle='Now Available'
  title='RSPWN Pro is Here'
  description='Advanced analytics
  and premium features for serious gamers. Limited time=50% off first year.'
  primaryButton={
      text
  href='#upgrade'
>
  Content
</CallToAction>
```

*TeamRecruitment:*
```jsx
<CallToAction
  title='Join Team Phoenix'
  description='We\'re looking for skilled players to join our competitive roster. Open tryouts this weekend.'
  primaryButton={
      text
  href='#apply'
>
  Content
</CallToAction>
```

*CustomContent:*
```jsx
<CallToAction
  title='Stay Connected'
  description='Follow us for the latest updates
  variant='centered'
  children=(
      <div style={{ 
        display
  gap='1rem'
  alignItems='center'
  justifyContent='center'
  flexWrap='wrap'
  marginTop='1rem'
>
  Content
</CallToAction>
```

*Newsletter:*
```jsx
<CallToAction
  title='Never Miss a Match'
  description='Get tournament updates
  variant='minimal'
  children=(
      <div style={{ 
        display
  gap='1rem'
  maxWidth='400px'
  margin='1rem auto 0'
  alignItems='center'
>
  Content
</CallToAction>
```

---

#### HeroSection

**Import:** `import { HeroSection } from '@rspwn/design-system'`

**Props:**
- `variant`: HeroSectionVariant
- `title`: string
- `subtitle`: string
- `announcement`: {
- `text`: string
- `link`: {
- `href`: string

**Usage Examples:**

*Centered:*
```jsx
<HeroSection
  variant='centered'
  title='The Ultimate Competitive Gaming Platform'
  subtitle='Join millions of professional gamers worldwide. Experience next-generation competitive gaming with cutting-edge technology and unmatched performance.'
  announcement={
      text
  link={
        text
  href='#tournament'
>
  Content
</HeroSection>
```

*WithoutNavigation:*
```jsx
<HeroSection
  variant='centered'
  title='Dominate the Competition'
  subtitle='Professional gaming tools and infrastructure designed for competitive excellence. Built by gamers
  primaryAction={
      text
  href='#play'
>
  Content
</HeroSection>
```

*Minimal:*
```jsx
<HeroSection
  variant='minimal'
  title='Welcome to RSPWN'
  subtitle='The future of competitive gaming starts here.'
  primaryAction={
      text
  href='#join'
>
  Content
</HeroSection>
```

*WithAnnouncement:*
```jsx
<HeroSection
  variant='centered'
  title='Championship Season 2024'
  subtitle='Compete for the largest prize pool in esports history. Registration now open for professional teams and individual players.'
  announcement={
      text
  link={
        text
  href='#register'
>
  Content
</HeroSection>
```

*ProductLaunch:*
```jsx
<HeroSection
  variant='centered'
  title='RSPWN Pro is Here'
  subtitle='Advanced analytics
  announcement={
      text
  link={
        text
  href='#offer'
>
  Content
</HeroSection>
```

*SimpleCallToAction:*
```jsx
<HeroSection
  variant='centered'
  title='Ready to Dominate?'
  subtitle='Join thousands of professional gamers who trust RSPWN for competitive excellence.'
  primaryAction={
      text
  href='#start'
>
  Content
</HeroSection>
```

---

#### SidebarNavigation

**Import:** `import { SidebarNavigation } from '@rspwn/design-system'`

**Props:**
- `brandName`: string
- `brandIcon`: string
- `navigation`: NavigationItem[]
- `teams`: TeamItem[]
- `settingsItem`: NavigationItem
- `userProfile`: {
- `name`: string
- `avatar`: string
- `menuItems`: Array<{ name: string
- `href`: string

**Usage Examples:**

*Default:*
```jsx
<SidebarNavigation
  brandName='RSPWN'
  navigation=defaultNavigation
  teams=defaultTeams
  settingsItem={ name
  href='#settings'
  icon='⚙️'
  current=false
>
  Content
</SidebarNavigation>
```

*WithoutTeams:*
```jsx
<SidebarNavigation
  brandName='RSPWN'
  navigation=defaultNavigation
  settingsItem={ name
  href='#settings'
  icon='⚙️'
  current=false
>
  Content
</SidebarNavigation>
```

*WithoutSearch:*
```jsx
<SidebarNavigation
  brandName='RSPWN'
  navigation=defaultNavigation
  teams=defaultTeams
  settingsItem={ name
  href='#settings'
  icon='⚙️'
  current=false
>
  Content
</SidebarNavigation>
```

*MinimalNavigation:*
```jsx
<SidebarNavigation
  brandName='RSPWN'
  navigation=[
      { name
  href='#dashboard'
  icon='🎯'
  current=true
>
  Content
</SidebarNavigation>
```

*GamingTeams:*
```jsx
<SidebarNavigation
  brandName='RSPWN'
  navigation=[
      { name
  href='#overview'
  icon='🎯'
  current=false
>
  Content
</SidebarNavigation>
```

*CustomBranding:*
```jsx
<SidebarNavigation
  brandName='GameStudio'
  navigation=[
      { name
  href='#projects'
  icon='📁'
  current=true
>
  Content
</SidebarNavigation>
```

---

### UI Components

#### Accordion

**Import:** `import { Accordion } from '@rspwn/design-system'`

**Props:**
- `id`: string
- `title`: string
- `children`: React.ReactNode
- `disabled`: boolean

**Usage Examples:**

*Default:*
```jsx
<Accordion
  variant='default'
  children=[
      <Accordion.Item key="item1" id="item1" title="First Section">
        This is the content of the first section. It contains some text and information that can be expanded or collapsed.
      </Accordion.Item>
>
  Content
</Accordion>
```

*AllowMultiple:*
```jsx
<Accordion
  allowMultiple=true
  variant='outlined'
  children=[
      <Accordion.Item key="multi1" id="multi1" title="Multiple Section 1">
        With allowMultiple enabled
>
  Content
</Accordion>
```

*DefaultOpen:*
```jsx
<Accordion
  defaultOpenItems=['open1'
  variant='outlined'
  children=[
      <Accordion.Item key="open1" id="open1" title="Initially Open Section">
        This section starts open by default.
      </Accordion.Item>
>
  Content
</Accordion>
```

*WithDisabledItems:*
```jsx
<Accordion
  variant='outlined'
  children=[
      <Accordion.Item key="enabled" id="enabled" title="Enabled Section">
        This section is enabled and can be toggled.
      </Accordion.Item>
>
  Content
</Accordion>
```

*LongContent:*
```jsx
<Accordion
  variant='outlined'
  children=[
      <Accordion.Item key="short" id="short" title="Short Content">
        Brief content that doesn't require much space.
      </Accordion.Item>
  <Accordion.Item key="long" id="long" title="Long Content">
        <div style={{ color='white'
  lineHeight=1.6
>
  Content
</Accordion>
```

---

#### Alert

**Import:** `import { Alert } from '@rspwn/design-system'`

**Props:**
- `title`: string
- `children`: React.ReactNode
- `severity`: 'info' | 'success' | 'warning' | 'error'
- `variant`: 'filled' | 'outlined' | 'subtle'
- `dismissible`: boolean
- `onClose`: () => void
- `action`: React.ReactNode
- `icon`: React.ReactNode
- `showIcon`: boolean
- `className`: string
- `role`: string

**Usage Examples:**

*Default:*
```jsx
<Alert
  severity='info'
  variant='subtle'
  children='This is an info alert with default settings.'
>
  Content
</Alert>
```

*Playground:*
```jsx
<Alert
  severity='info'
  variant='subtle'
  title='Alert Title'
  children='This is the alert message content.'
  showIcon=true
  dismissible=false
>
  Content
</Alert>
```

---

#### Avatar

**Import:** `import { Avatar } from '@rspwn/design-system'`

**Props:**
- `src`: string
- `alt`: string
- `name`: string
- `icon`: React.ReactNode
- `size`: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'
- `variant`: 'circular' | 'square'
- `status`: 'online' | 'offline' | 'away' | 'busy'
- `showStatus`: boolean
- `loading`: boolean
- `onError`: () => void
- `className`: string
- `onClick`: () => void

**Usage Examples:**

*Default:*
```jsx
<Avatar
  name='John Doe'
  size='md'
  variant='circular'
>
  Content
</Avatar>
```

*WithImage:*
```jsx
<Avatar
  src='https
  alt='Profile picture'
  name='John Doe'
  size='md'
>
  Content
</Avatar>
```

---

#### Badge

**Import:** `import { Badge } from '@rspwn/design-system'`

**Props:**
- `children`: React.ReactNode
- `variant`: 'solid' | 'outline' | 'subtle'
- `size`: 'sm' | 'md' | 'lg'
- `color`: 'gray' | 'blue' | 'purple' | 'success' | 'warning' | 'error'
- `dot`: boolean
- `className`: string
- `as`: keyof JSX.IntrinsicElements

**Usage Examples:**

*Default:*
```jsx
<Badge
  children='Badge'
  variant='solid'
  size='md'
  color='gray'
>
  Content
</Badge>
```

---

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Props:**
- `items`: BreadcrumbItem[]
- `size`: 'sm' | 'md' | 'lg'
- `variant`: 'default' | 'compact'
- `separator`: React.ReactNode
- `maxItems`: number
- `className`: string

**Usage Examples:**

*Default:*
```jsx
<Box
  items=basicItems
  size='md'
  variant='default'
>
  Content
</Box>
```

*Playground:*
```jsx
<Box
  items=basicItems
  size='md'
  variant='default'
  maxItems=undefined
>
  Content
</Box>
```

---

#### Button

**Import:** `import { Button } from '@rspwn/design-system'`

**Props:**
- `variant`: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger'
- `size`: 'sm' | 'md' | 'lg'
- `fullWidth`: boolean
- `disabled`: boolean
- `loading`: boolean
- `children`: React.ReactNode
- `onClick`: () => void
- `type`: 'button' | 'submit' | 'reset'
- `className`: string

**Usage Examples:**

*Default:*
```jsx
<Button
  children='Button'
  variant='primary'
  size='md'
>
  Content
</Button>
```

*Interactive:*
```jsx
<Button
  children='Click me!'
  onClick=() => alert('Button clicked!')
>
  Content
</Button>
```

---

#### Card

**Import:** `import { Card } from '@rspwn/design-system'`

**Usage Examples:**

*Default:*
```jsx
<Card
  children=(
      <div>
        <Typography variant="h4" style={{ marginBottom
>
  Content
</Card>
```

---

#### Checkbox

**Import:** `import { Checkbox } from '@rspwn/design-system'`

**Usage Examples:**

*Default:*
```jsx
<Checkbox
  label='Default checkbox'
  size='md'
>
  Content
</Checkbox>
```

*WithLabel:*
```jsx
<Checkbox
  label='I agree to the terms and conditions'
  checked=false
>
  Content
</Checkbox>
```

*WithHelperText:*
```jsx
<Checkbox
  label='Subscribe to newsletter'
  helperText='You can unsubscribe at any time'
>
  Content
</Checkbox>
```

*ErrorState:*
```jsx
<Checkbox
  label='Required checkbox'
  error=true
  errorText='You must accept the terms to continue'
>
  Content
</Checkbox>
```

---

#### DatePicker

**Import:** `import { DatePicker } from '@rspwn/design-system'`

**Usage Examples:**

*Default:*
```jsx
<DatePicker
  variant='default'
  size='md'
  showCalendarIcon=true
>
  Content
</DatePicker>
```

*WithLabel:*
```jsx
<DatePicker
  label='Date of Birth'
  defaultValue='2024-01-15'
>
  Content
</DatePicker>
```

*WithHelperText:*
```jsx
<DatePicker
  label='Event Date'
  helperText='Select the date for your event'
  defaultValue='2024-09-15'
>
  Content
</DatePicker>
```

*ErrorState:*
```jsx
<DatePicker
  label='Required Date Field'
  error=true
  errorText='This date field is required'
>
  Content
</DatePicker>
```

*WithoutCalendarIcon:*
```jsx
<DatePicker
  label='Custom Date Input'
  showCalendarIcon=false
  helperText='Uses browser default calendar picker'
  defaultValue='2024-01-15'
>
  Content
</DatePicker>
```

*Required:*
```jsx
<DatePicker
  label='Required Date Field'
  required=true
  helperText='This field is required'
>
  Content
</DatePicker>
```

---

#### useState

**Import:** `import { useState } from '@rspwn/design-system'`

**Props:**
- `isOpen`: boolean
- `onClose`: () => void
- `side`: 'left' | 'right' | 'top' | 'bottom'
- `size`: 'sm' | 'md' | 'lg' | 'xl' | 'full'
- `title`: string
- `showCloseButton`: boolean
- `closeOnOverlayClick`: boolean
- `closeOnEscape`: boolean
- `children`: React.ReactNode
- `className`: string

**Usage Examples:**

---

#### useState

**Import:** `import { useState } from '@rspwn/design-system'`

**Usage Examples:**

---

#### Footer

**Import:** `import { Footer } from '@rspwn/design-system'`

**Props:**
- `links`: Array<{
- `label`: string
- `href`: string
- `external`: boolean

**Usage Examples:**

*Default:*
```jsx
<Footer
  links=defaultLinks
  socialLinks=socialLinks
>
  Content
</Footer>
```

*MinimalFooter:*
```jsx
<Footer
  copyright='© 2024 RSPWN. All rights reserved.'
>
  Content
</Footer>
```

*WithLinksOnly:*
```jsx
<Footer
  links=[
      { label
  href='/privacy'
>
  Content
</Footer>
```

*WithSocialOnly:*
```jsx
<Footer
  socialLinks=socialLinks
>
  Content
</Footer>
```

*ExtensiveFooter:*
```jsx
<Footer
  links=[
      { label
  href='/about'
>
  Content
</Footer>
```

*CustomCopyright:*
```jsx
<Footer
  links=defaultLinks
  socialLinks=socialLinks
  copyright='© 2024 RSPWN Design System. Licensed under MIT.'
>
  Content
</Footer>
```

*Mobile:*
```jsx
<Footer
  links=defaultLinks
  socialLinks=socialLinks
>
  Content
</Footer>
```

---

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Props:**
- `name`: IconName
- `size`: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | number
- `color`: string
- `role`: string
- `className`: string
- `style`: React.CSSProperties
- `onClick`: (event: React.MouseEvent<SVGSVGElement>) => void

**Usage Examples:**

*Default:*
```jsx
<Box
  name='gamepad'
  size='md'
>
  Content
</Box>
```

*Playground:*
```jsx
<Box
  name='gamepad'
  size='md'
  color=''
>
  Content
</Box>
```

---

#### Image

**Import:** `import { Image } from '@rspwn/design-system'`

**Usage Examples:**

*Default:*
```jsx
<Image
  src=sampleImages.gaming
  alt='Gaming setup with RGB lighting'
  width='400px'
  height='300px'
>
  Content
</Image>
```

*Playground:*
```jsx
<Image
  src=sampleImages.gaming
  alt='Gaming setup playground'
  width='400px'
  height='300px'
  objectFit='cover'
  loading='eager'
  showSkeleton=true
  fadeIn=true
>
  Content
</Image>
```

---

#### Input

**Import:** `import { Input } from '@rspwn/design-system'`

**Usage Examples:**

*Default:*
```jsx
<Input
  placeholder='Enter text...'
  variant='default'
  size='md'
>
  Content
</Input>
```

*WithLabel:*
```jsx
<Input
  label='Email Address'
  placeholder='Enter your email'
  type='email'
>
  Content
</Input>
```

*WithHelperText:*
```jsx
<Input
  label='Username'
  placeholder='Enter username'
  helperText='Must be at least 3 characters long'
>
  Content
</Input>
```

*ErrorState:*
```jsx
<Input
  label='Password'
  type='password'
  placeholder='Enter password'
  error=true
  errorText='Password must be at least 8 characters'
>
  Content
</Input>
```

---

#### useState

**Import:** `import { useState } from '@rspwn/design-system'`

**Props:**
- `isOpen`: boolean
- `onClose`: () => void
- `title`: string
- `size`: 'sm' | 'md' | 'lg' | 'xl' | 'full'
- `showCloseButton`: boolean
- `closeOnOverlayClick`: boolean
- `closeOnEscape`: boolean
- `children`: React.ReactNode
- `className`: string

**Usage Examples:**

---

#### Navigation

**Import:** `import { Navigation } from '@rspwn/design-system'`

**Props:**
- `items`: NavigationItem[]
- `className`: string
- `linkComponent`: React.ComponentType<{
- `to`: string
- `href`: string
- `children`: React.ReactNode
- `onClick`: (event: React.MouseEvent) => void

**Usage Examples:**

*Default:*
```jsx
<Navigation
  items=defaultItems
  currentPath='/components'
>
  Content
</Navigation>
```

*WithIcons:*
```jsx
<Navigation
  items=itemsWithIcons
  currentPath='/dashboard'
>
  Content
</Navigation>
```

*WithClickHandlers:*
```jsx
<Navigation
  items=[
      { 
        label
  href='#home'
  onClick=() => alert('Home clicked!')
>
  Content
</Navigation>
```

*CustomBrand:*
```jsx
<Navigation
  items=defaultItems
  brand=(
      <div style={{ display
  alignItems='center'
  gap='8px'
>
  Content
</Navigation>
```

*ManyItems:*
```jsx
<Navigation
  items=[
      { label
  href='/'
>
  Content
</Navigation>
```

*Mobile:*
```jsx
<Navigation
  items=defaultItems
  currentPath='/components'
>
  Content
</Navigation>
```

*MobileWithIcons:*
```jsx
<Navigation
  items=itemsWithIcons
  currentPath='/dashboard'
>
  Content
</Navigation>
```

*AccessibilityDemo:*
```jsx
<Navigation
  items=[
      { 
        label
  href='/dashboard'
  icon=(
          <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
            <line x1="9" y1="9" x2="15" y2="15"/>
            <line x1="9" y1="15" x2="15" y2="15"/>
          </svg>
        )
>
  Content
</Navigation>
```

---

#### Pagination

**Import:** `import { Pagination } from '@rspwn/design-system'`

**Props:**
- `currentPage`: number
- `totalPages`: number
- `onPageChange`: (page: number) => void
- `size`: 'sm' | 'md' | 'lg'
- `variant`: 'default' | 'minimal' | 'compact'
- `showFirstLast`: boolean
- `showPrevNext`: boolean
- `showPageNumbers`: boolean
- `maxVisiblePages`: number
- `previousLabel`: string
- `nextLabel`: string
- `firstLabel`: string
- `lastLabel`: string
- `disabled`: boolean
- `className`: string

**Usage Examples:**

*Default:*
```jsx
<Pagination
  currentPage=5
  totalPages=20
  onPageChange=(page) => console.log('Page changed to
  size='md'
  variant='default'
>
  Content
</Pagination>
```

*Playground:*
```jsx
<Pagination
  currentPage=5
  totalPages=20
  onPageChange=(page) => console.log('Page
  size='md'
  variant='default'
  showFirstLast=true
  showPrevNext=true
  showPageNumbers=true
  maxVisiblePages=7
  disabled=false
>
  Content
</Pagination>
```

---

#### useState

**Import:** `import { useState } from '@rspwn/design-system'`

**Usage Examples:**

---

#### Progress

**Import:** `import { Progress } from '@rspwn/design-system'`

**Props:**
- `value`: number
- `max`: number
- `variant`: 'linear' | 'circular'
- `size`: 'sm' | 'md' | 'lg'
- `indeterminate`: boolean
- `color`: 'blue' | 'success' | 'warning' | 'error' | 'purple'
- `showLabel`: boolean
- `showPercentage`: boolean
- `label`: string
- `className`: string

**Usage Examples:**

*Default:*
```jsx
<Progress
  value=50
  max=100
  variant='linear'
  size='md'
  color='blue'
>
  Content
</Progress>
```

*Playground:*
```jsx
<Progress
  value=50
  max=100
  variant='linear'
  size='md'
  indeterminate=false
  color='blue'
  showLabel=false
  showPercentage=false
  label='Progress'
>
  Content
</Progress>
```

---

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Props:**
- `value`: string
- `checked`: boolean
- `onChange`: (checked: boolean, value: string) => void
- `label`: string
- `description`: string
- `disabled`: boolean
- `size`: 'sm' | 'md' | 'lg'
- `variant`: 'default' | 'card' | 'button'
- `className`: string
- `id`: string
- `name`: string
- `required`: boolean

**Usage Examples:**

*Default:*
```jsx
<Box
  options=basicOptions
  label='Select Size'
  variant='default'
  size='md'
>
  Content
</Box>
```

*Playground:*
```jsx
<Box
  options=detailedOptions
  label='Select Option'
  variant='default'
  size='md'
  orientation='vertical'
  disabled=false
  required=false
  error=false
  helperText='Choose the option that best fits your needs.'
>
  Content
</Box>
```

---

#### Rating

**Import:** `import { Rating } from '@rspwn/design-system'`

**Props:**
- `value`: number
- `onChange`: (value: number) => void
- `maxRating`: number
- `allowHalf`: boolean
- `readOnly`: boolean
- `size`: 'sm' | 'md' | 'lg'
- `icon`: React.ReactNode
- `emptyIcon`: React.ReactNode
- `disabled`: boolean
- `label`: string
- `helperText`: string
- `className`: string
- `id`: string
- `name`: string
- `onFocus`: (e: React.FocusEvent<HTMLDivElement>) => void
- `onBlur`: (e: React.FocusEvent<HTMLDivElement>) => void

**Usage Examples:**

*Default:*
```jsx
<Rating
  value=3
  size='md'
  maxRating=5
>
  Content
</Rating>
```

*Playground:*
```jsx
<Rating
  value=3
  maxRating=5
  allowHalf=false
  readOnly=false
  size='md'
  disabled=false
  label='Rating'
  helperText='Click stars to rate'
>
  Content
</Rating>
```

---

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Props:**
- `placeholder`: string
- `value`: string
- `onChange`: (value: string) => void
- `onSelect`: (option: SearchOption | null) => void
- `options`: SearchOption[]
- `loading`: boolean
- `autocomplete`: boolean
- `showDropdown`: boolean
- `filterOptions`: boolean
- `minQueryLength`: number
- `maxResults`: number
- `onSearch`: (query: string) => void
- `searchDelay`: number
- `size`: 'sm' | 'md' | 'lg'
- `variant`: 'default' | 'filled' | 'borderless'
- `showIcon`: boolean
- `showClear`: boolean
- `showCategories`: boolean
- `disabled`: boolean
- `error`: boolean
- `width`: string | number
- `className`: string
- `id`: string
- `name`: string

**Usage Examples:**

*Default:*
```jsx
<Box
  placeholder='Search frameworks...'
  options=basicOptions
  size='md'
  variant='default'
>
  Content
</Box>
```

*Playground:*
```jsx
<Box
  placeholder='Search...'
  options=detailedOptions
  size='md'
  variant='default'
  autocomplete=true
  showDropdown=true
  filterOptions=true
  minQueryLength=0
  maxResults=10
  searchDelay=300
  showIcon=true
  showClear=true
  showCategories=true
  disabled=false
  error=false
  loading=false
  width='400px'
>
  Content
</Box>
```

---

#### Select

**Import:** `import { Select } from '@rspwn/design-system'`

**Usage Examples:**

*Default:*
```jsx
<Select
  options=basicOptions
  placeholder='Select an option...'
  variant='default'
  size='md'
>
  Content
</Select>
```

*WithLabel:*
```jsx
<Select
  label='Country'
  options=countryOptions
  placeholder='Select your country'
>
  Content
</Select>
```

*WithHelperText:*
```jsx
<Select
  label='Preferred Language'
  options=[
      { value
  label='English'
>
  Content
</Select>
```

*WithDisabledOptions:*
```jsx
<Select
  label='Availability'
  options=optionsWithDisabled
  placeholder='Select availability...'
  helperText='Some options may not be available'
>
  Content
</Select>
```

*ErrorState:*
```jsx
<Select
  label='Required Field'
  options=basicOptions
  placeholder='Please select...'
  error=true
  errorText='This field is required'
>
  Content
</Select>
```

---

#### Skeleton

**Import:** `import { Skeleton } from '@rspwn/design-system'`

**Props:**
- `variant`: 'text' | 'circular' | 'rectangular' | 'rounded'
- `width`: string | number
- `height`: string | number
- `animation`: 'pulse' | 'wave' | 'none'
- `speed`: 'slow' | 'normal' | 'fast'
- `lines`: number
- `className`: string
- `style`: React.CSSProperties

**Usage Examples:**

*Default:*
```jsx
<Skeleton
  variant='rectangular'
  animation='pulse'
  speed='normal'
>
  Content
</Skeleton>
```

*Playground:*
```jsx
<Skeleton
  variant='rectangular'
  width='300px'
  height='40px'
  animation='pulse'
  speed='normal'
  lines=1
>
  Content
</Skeleton>
```

---

#### useState

**Import:** `import { useState } from '@rspwn/design-system'`

**Usage Examples:**

*Default:*
```jsx
<useState
  min=0
  max=100
  defaultValue=50
  variant='single'
  size='md'
>
  Content
</useState>
```

*Range:*
```jsx
<useState
  min=0
  max=100
  defaultValue=[25
  variant='range'
  size='md'
>
  Content
</useState>
```

*WithLabel:*
```jsx
<useState
  min=0
  max=100
  defaultValue=30
  label='Volume'
  helperText='Adjust the volume level'
>
  Content
</useState>
```

*WithTicks:*
```jsx
<useState
  min=0
  max=100
  step=10
  defaultValue=50
  showTicks=true
  label='Progress'
>
  Content
</useState>
```

*WithTickLabels:*
```jsx
<useState
  min=0
  max=4
  step=1
  defaultValue=2
  showTicks=true
  showLabels=true
  tickLabels=['Poor'
  label='Rating'
>
  Content
</useState>
```

*Vertical:*
```jsx
<useState
  min=0
  max=100
  defaultValue=60
  orientation='vertical'
  size='md'
>
  Content
</useState>
```

*VerticalRange:*
```jsx
<useState
  min=0
  max=100
  defaultValue=[30
  variant='range'
  orientation='vertical'
  size='md'
>
  Content
</useState>
```

---

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Props:**
- `steps`: Step[]
- `activeStep`: number
- `onStepClick`: (stepIndex: number, step: Step) => void
- `nonLinear`: boolean
- `orientation`: 'horizontal' | 'vertical'
- `getStepStatus`: (stepIndex: number, step: Step) => StepStatus
- `size`: 'sm' | 'md' | 'lg'
- `variant`: 'default' | 'compact' | 'dots'
- `disabled`: boolean
- `showContent`: boolean
- `className`: string

**Usage Examples:**

*Default:*
```jsx
<Box
  steps=basicSteps
  activeStep=2
  orientation='horizontal'
  size='md'
  variant='default'
>
  Content
</Box>
```

*Playground:*
```jsx
<Box
  steps=detailedSteps
  activeStep=1
  orientation='horizontal'
  size='md'
  variant='default'
  nonLinear=false
  disabled=false
  showContent=false
>
  Content
</Box>
```

---

#### Switch

**Import:** `import { Switch } from '@rspwn/design-system'`

**Usage Examples:**

*Default:*
```jsx
<Switch
  label='Default switch'
  size='md'
>
  Content
</Switch>
```

*WithLabel:*
```jsx
<Switch
  label='Enable notifications'
  checked=false
>
  Content
</Switch>
```

*WithHelperText:*
```jsx
<Switch
  label='Dark mode'
  helperText='Toggle between light and dark themes'
>
  Content
</Switch>
```

*ErrorState:*
```jsx
<Switch
  label='Accept terms and conditions'
  error=true
  errorText='You must accept the terms to continue'
>
  Content
</Switch>
```

---

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Usage Examples:**

*Default:*
```jsx
<Box
  data=userData
  columns=basicUserColumns
  variant='default'
  size='md'
>
  Content
</Box>
```

*Playground:*
```jsx
<Box
  data=userData
  columns=basicUserColumns
  variant='default'
  size='md'
  sortable=false
  selectable=false
  hoverable=true
  loading=false
  loadingRows=5
  emptyMessage='No data available'
  stickyHeader=false
>
  Content
</Box>
```

---

#### useState

**Import:** `import { useState } from '@rspwn/design-system'`

**Usage Examples:**

---

#### TextArea

**Import:** `import { TextArea } from '@rspwn/design-system'`

**Props:**
- `value`: string
- `onChange`: (value: string) => void
- `placeholder`: string
- `variant`: 'default' | 'filled' | 'borderless'
- `size`: 'sm' | 'md' | 'lg'
- `rows`: number
- `minRows`: number
- `maxRows`: number
- `resize`: 'none' | 'vertical' | 'horizontal' | 'both'
- `autoResize`: boolean
- `maxLength`: number
- `showCharCount`: boolean
- `disabled`: boolean
- `error`: boolean
- `required`: boolean
- `readOnly`: boolean
- `label`: string
- `helperText`: string
- `errorMessage`: string
- `width`: string | number
- `height`: string | number
- `className`: string
- `id`: string
- `name`: string
- `autoFocus`: boolean
- `onFocus`: (e: React.FocusEvent<HTMLTextAreaElement>) => void
- `onBlur`: (e: React.FocusEvent<HTMLTextAreaElement>) => void
- `onKeyDown`: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void

**Usage Examples:**

*Default:*
```jsx
<TextArea
  placeholder='Enter your message...'
  variant='default'
  size='md'
>
  Content
</TextArea>
```

*Playground:*
```jsx
<TextArea
  placeholder='Enter your text here...'
  variant='default'
  size='md'
  rows=4
  resize='vertical'
  autoResize=false
  maxLength=undefined
  showCharCount=false
  disabled=false
  error=false
  required=false
  readOnly=false
  label='Text Area'
  helperText='Helper text goes here'
  width='400px'
>
  Content
</TextArea>
```

---

#### Box

**Import:** `import { Box } from '@rspwn/design-system'`

**Props:**
- `items`: TimelineItem[]
- `alternate`: boolean
- `size`: 'sm' | 'md' | 'lg'
- `variant`: 'default' | 'compact' | 'detailed'
- `disabled`: boolean
- `className`: string

**Usage Examples:**

*Default:*
```jsx
<Box
  items=basicItems
  size='md'
  variant='default'
>
  Content
</Box>
```

*Playground:*
```jsx
<Box
  items=gamingEvents
  size='md'
  variant='default'
  alternate=false
  disabled=false
>
  Content
</Box>
```

---

#### Button

**Import:** `import { Button } from '@rspwn/design-system'`

**Props:**
- `id`: string
- `title`: string
- `description`: string
- `variant`: 'default' | 'success' | 'error' | 'warning' | 'info'
- `duration`: number
- `action`: {
- `label`: string
- `onClick`: () => void

**Usage Examples:**

---

#### Tooltip

**Import:** `import { Tooltip } from '@rspwn/design-system'`

**Props:**
- `content`: React.ReactNode
- `children`: React.ReactNode
- `placement`: 'top' | 'bottom' | 'left' | 'right' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end' | 'left-start' | 'left-end' | 'right-start' | 'right-end'
- `trigger`: 'hover' | 'focus' | 'click' | 'manual'
- `delay`: number
- `hideDelay`: number
- `arrow`: boolean
- `open`: boolean
- `onOpenChange`: (open: boolean) => void
- `className`: string
- `disabled`: boolean

**Usage Examples:**

*Default:*
```jsx
<Tooltip
  content='This is a tooltip'
  placement='top'
  trigger='hover'
>
  Content
</Tooltip>
```

*Playground:*
```jsx
<Tooltip
  content='Customizable tooltip'
  placement='top'
  trigger='hover'
  delay=0
  hideDelay=0
  arrow=true
  disabled=false
>
  Content
</Tooltip>
```

---

## RSPWN Brand Guidelines

### Typography Rules
- **Audiowide font**: ONLY use for brand name "RSPWN" and major headings
- **Inter font**: Use for all body text and secondary headings  
- **Never** use Audiowide for body text or long content

### Color Usage
- **Primary Blue (#4A9EFF)**: Exclusively for primary actions and key interactive elements
- **Professional grayscale hierarchy**: For content structure
- **White text (#FFFFFF)**: Primary content
- **Gray variants**: Secondary information
- Avoid decorative color usage in titles or non-functional elements

### Typography Component Usage
```jsx
// ✅ Correct brand usage
<Typography variant="brand">RSPWN</Typography>

// ✅ Correct heading usage  
<Typography variant="h1">Welcome to the Platform</Typography>

// ✅ Correct body text usage
<Typography variant="body1">Your main content goes here</Typography>

// ❌ Wrong - don't use brand variant for long text
<Typography variant="brand">This is a long paragraph of text...</Typography>
```

### Button Component Usage
```jsx
// ✅ Primary button for main actions
<Button variant="primary">Get Started</Button>

// ✅ Secondary for supporting actions  
<Button variant="secondary">Learn More</Button>

// ✅ Outline for alternative actions
<Button variant="outline">Cancel</Button>
```

## Common Patterns

### Page Layout
```jsx
<Container maxWidth="lg">
  <Box p={8}>
    <Typography variant="brand" mb={2}>RSPWN</Typography>
    <Typography variant="h1" mb={6}>Page Title</Typography>
    
    <Card variant="elevated" p={6}>
      <Typography variant="body1">Content goes here</Typography>
      <Button variant="primary" mt={4}>Primary Action</Button>
    </Card>
  </Box>
</Container>
```

### Form Layout  
```jsx
<Box as="form" maxWidth="400px">
  <Typography variant="h2" mb={6}>Sign In</Typography>
  
  <Input 
    label="Email"
    type="email"
    placeholder="Enter your email"
    mb={4}
  />
  
  <Input
    label="Password" 
    type="password"
    placeholder="Enter your password"
    mb={6}
  />
  
  <Button variant="primary" fullWidth type="submit">
    Sign In
  </Button>
</Box>
```

## Design Tokens Available

### Colors
- Foundation: `theme.colors.foundation.black`, `theme.colors.foundation.white`
- Innovation: `theme.colors.innovation.primaryBlue`, `theme.colors.innovation.secondaryPurple`
- Text: `theme.colors.text.primary`, `theme.colors.text.secondary`, `theme.colors.text.muted`
- Gray: `theme.colors.gray.dark`, `theme.colors.gray.base`, `theme.colors.gray.light`

### Spacing
- Available: `theme.spacing[1]` through `theme.spacing[16]`
- Common values: `theme.spacing[2]` (8px), `theme.spacing[4]` (16px), `theme.spacing[8]` (32px)

### Typography
- Font families: `theme.typography.fonts.brand` (Audiowide), `theme.typography.fonts.body` (Inter)
- Font sizes: `theme.typography.fontSizes.xs` through `theme.typography.fontSizes['6xl']`
- Font weights: `theme.typography.fontWeights.normal`, `medium`, `semibold`, `bold`

---

*This documentation was automatically generated from Storybook components. For interactive examples, run `npm run storybook`.*
